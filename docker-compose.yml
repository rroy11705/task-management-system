# File: task-management-system/docker-compose.yml
# Docker Compose configuration for the Task Management System

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - JWT_SECRET=84b7e1fb7df7a321e56b8112cace70c3548d801198284c7acf49dc043a8bdf9a4d34bd691eab9a733f3dfda5223575d13e7131c25e6fb942ebd70510bf19907e
      - JWT_ALGORITHM=HS256
      - TENANT_RESOLVER_SERVICE_URL=http://tenant-resolver:8001
      - USER_MANAGEMENT_SERVICE_URL=http://user-management:8002
      - PROJECT_SERVICE_URL=http://project-service:8003
      - URL_SHORTENER_SERVICE_URL=http://url-shortener:8004
      - ANALYTICS_SERVICE_URL=http://analytics:8005
      - CORS_ORIGINS=http://localhost,http://localhost:3000
      - RATE_LIMIT_PER_MINUTE=100
      - USE_REDIS_RATE_LIMIT=false
    depends_on:
      tenant-resolver:
        condition: service_started
      user-management:
        condition: service_started
      project-service:
        condition: service_started
      url-shortener:
        condition: service_started
      analytics:
        condition: service_started
    networks:
      - saas-network
    volumes:
      - ./api-gateway:/app

  # Tenant Resolver Service
  tenant-resolver:
    build: ./tenant-resolver-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@tenant-db:5432/tenant_resolver
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - POSTGRES_ADMIN_USER=postgres
      - POSTGRES_ADMIN_PASSWORD=postgres
      - POSTGRES_HOST=tenant-db
      - POSTGRES_PORT=5432
      - DB_HOST=tenant-db
      - DB_PORT=5432
    depends_on:
      rabbitmq:
        condition: service_healthy
      tenant-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - saas-network
    volumes:
      - ./tenant-resolver-service:/app
      - ./shared:/app/shared

  # User Management Service
  user-management:
    build: ./user-management-service
    ports:
      - "8002:8002"
    environment:
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8001
      - DATABASE_URL=postgresql://postgres:postgres@user-db:5432/user_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=user-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=user_management
      - JWT_SECRET=84b7e1fb7df7a321e56b8112cace70c3548d801198284c7acf49dc043a8bdf9a4d34bd691eab9a733f3dfda5223575d13e7131c25e6fb942ebd70510bf19907e
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - saas-network
    volumes:
      - ./user-management-service:/app
      - ./shared:/app/shared

  # Project Service
  project-service:
    build: ./project-service
    ports:
      - "8003:8003"
    environment:
      - TENANT_RESOLVER_SERVICE_URL=http://tenant-resolver:8001
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - saas-network
    volumes:
      - ./project-service:/app

  # URL Shortener Service
  url-shortener:
    build: ./url-shortener-service
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@url-db:5432/url_shortener
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      url-db:
        condition: service_healthy
    restart: on-failure
    networks:
      - saas-network
    volumes:
      - ./url-shortener-service:/app

  # Analytics Service
  analytics:
    build: ./analytics-service
    ports:
      - "8005:8005"
    environment:
      - MONGODB_URL=mongodb://analytics-db:27017/analytics
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      analytics-db:
        condition: service_started
    restart: on-failure
    networks:
      - saas-network
    volumes:
      - ./analytics-service:/app

  # Databases
  tenant-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tenant_resolver
    ports:
      - "5434:5432"
    networks:
      - saas-network
    volumes:
      - tenant-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_management
    ports:
      - "5435:5432"
    networks:
      - saas-network
    volumes:
      - user-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  url-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=url_shortener
    ports:
      - "5436:5432"
    networks:
      - saas-network
    volumes:
      - url-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  analytics-db:
    image: mongo:4.4
    ports:
      - "27017:27017"
    networks:
      - saas-network
    volumes:
      - analytics-db-data:/data/db

  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

networks:
  saas-network:
    driver: bridge

volumes:
  tenant-db-data:
  user-db-data:
  url-db-data:
  analytics-db-data: